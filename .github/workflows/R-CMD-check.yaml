on:
  push:
    paths:
      - 'r/**/*'
  pull_request:
    paths:
      - 'r/**/*'

name: "R checks"

jobs:
  R-CMD-check:
    if: "! contains(github.event.head_commit.message, '[ci skip]')"    

    timeout-minutes: 30

    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'devel'    }
          - {os: windows-latest, r: 'release'  }
          - {os: macOS-latest,   r: 'devel'    }
          - {os: macOS-latest,   r: 'release'  }
          - {os: ubuntu-20.04,   r: 'devel'    }
          - {os: ubuntu-20.04,   r: 'release'  }
          - {os: ubuntu-20.04,   r: 'oldrel'   }
          - {os: ubuntu-20.04,   r: '4.0'      }
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      ## R CMD check
      _R_CHECK_CRAN_INCOMING_: false
      _R_CHECK_LENGTH_1_CONDITION_: true
      _R_CHECK_LENGTH_1_LOGIC2_: true
      _R_CHECK_MATRIX_DATA_: true
      _R_CHECK_SUGGESTS_ONLY_: true
      
    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-tinytex@v2

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get install -y tidy

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: r
          extra-packages: any::rcmdcheck
          needs: check

      - name: Session info
        run: |
          options(width = 100)
          capabilities()
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check (!Windows)
        if: runner.os != 'Windows'
        run: |
          rcmdcheck::rcmdcheck(
            path = "r",
            args = "--as-cran",
            error_on = "note",
            check_dir = "check"
          )
        shell: Rscript {0}

      - name: Check (Windows)
        if: runner.os == 'Windows'
        run: |
          rcmdcheck::rcmdcheck(
            path = "r",
            args = c("--no-manual", "--as-cran"),
            error_on = "note",
            check_dir = "check"
          )
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
