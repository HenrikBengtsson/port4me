on:
  push:
    paths:
      - 'r/**/*'
      - .github/workflows/check-r.yml
  pull_request:
    paths:
      - 'r/**/*'
      - .github/workflows/check-r.yml

name: "R test coverage"

jobs:
  coverage:
    if: "! contains(github.event.head_commit.message, '[ci skip]')"    

    timeout-minutes: 10

    runs-on: ubuntu-latest

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      ## R CMD check
      _R_CHECK_CRAN_INCOMING_: false
      _R_CHECK_MATRIX_DATA_: true
      _R_CHECK_SUGGESTS_ONLY_: true
      
    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-tinytex@v2

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get install -y tidy

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: r
          extra-packages: any::rcmdcheck any::covr any::jsonlite
          needs: check coverage

      - name: Install port4me
        run: |
          cd r/
          Rscript -e "install.packages('.', repos = NULL, type = 'source')"

      - name: Session info
        run: |
          options(width = 100)
          capabilities()
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Test coverage
        run: |
          setwd("r")
          ## relative_path = ".." => reported files r/R/*.R, r/src/*.{c,h}
          coverage <- covr::package_coverage(relative_path = "..", quiet = FALSE)
          print(coverage)
          covr::codecov(coverage = coverage, flags = "r", quiet = FALSE)  ## Upload to codecov
        shell: Rscript {0}
