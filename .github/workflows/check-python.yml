on:
  push:
    paths:
      - 'python/**/*'
  pull_request:
    paths:
      - 'python/**/*'

name: "Python checks"

permissions:
  contents: read

jobs:
  check:
    if: "! contains(github.event.head_commit.message, '[ci skip]')"

    timeout-minutes: 10

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        curl -L -O https://github.com/bats-core/bats-core/archive/refs/tags/v1.7.0.tar.gz && tar xf v1.7.0.tar.gz
        curl -L -O https://github.com/bats-core/bats-support/archive/refs/tags/v0.3.0.tar.gz && tar xf v0.3.0.tar.gz
        curl -L -O https://github.com/bats-core/bats-assert/archive/refs/tags/v2.0.0.tar.gz && tar xf v2.0.0.tar.gz
        curl -L -O https://github.com/koalaman/shellcheck/releases/download/v0.9.0/shellcheck-v0.9.0.linux.x86_64.tar.xz
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        tar Jxf shellcheck-v0.9.0.linux.x86_64.tar.xz
        mv shellcheck-v0.9.0/shellcheck .

    - name: Install port4me
      run: |
        cd python/
        pip install .
        
    - name: Session information
      run: |
        PATH="$PWD:$PATH" shellcheck --version
        python --version
        python -m port4me --version

    - name: Lint with flake8
      run: |
        cd python/
        flake8 --version
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        pytest

    - name: Check with Bats
      run: |
        export BATS_SUPPORT_HOME=$PWD/bats-support-0.3.0
        export BATS_ASSERT_HOME=$PWD/bats-assert-2.0.0
        export PATH=$PWD/bats-core-1.7.0/bin:$PATH
        bats --version
        cd python/tests/
        bats *.bats
